{"ast":null,"code":"import _classCallCheck from \"/Users/Abhishek/Coding Practice/NodeJS/REST API - Frontend Testing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Abhishek/Coding Practice/NodeJS/REST API - Frontend Testing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Abhishek/Coding Practice/NodeJS/REST API - Frontend Testing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Abhishek/Coding Practice/NodeJS/REST API - Frontend Testing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Abhishek/Coding Practice/NodeJS/REST API - Frontend Testing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Abhishek/Coding Practice/NodeJS/REST API - Frontend Testing/src/pages/Feed/SinglePost/SinglePost.js\";\nimport React, { Component } from 'react';\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nvar SinglePost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SinglePost, _Component);\n\n  function SinglePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SinglePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SinglePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      author: '',\n      date: '',\n      image: '',\n      content: ''\n    };\n    return _this;\n  }\n\n  _createClass(SinglePost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var postId = this.props.match.params.postId;\n      fetch('http://localhost:8081/feed/post/' + postId).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch status');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          title: resData.post.title,\n          author: resData.post.creator.name,\n          date: new Date(resData.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.post.content\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        className: \"single-post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Created by \", this.state.author, \" on \", this.state.date), React.createElement(\"div\", {\n        className: \"single-post__image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Image, {\n        contain: true,\n        imageUrl: this.state.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.content));\n    }\n  }]);\n\n  return SinglePost;\n}(Component);\n\nexport default SinglePost;","map":{"version":3,"sources":["/Users/Abhishek/Coding Practice/NodeJS/REST API - Frontend Testing/src/pages/Feed/SinglePost/SinglePost.js"],"names":["React","Component","Image","SinglePost","state","title","author","date","image","content","postId","props","match","params","fetch","then","res","status","Error","json","resData","setState","post","creator","name","Date","createdAt","toLocaleDateString","catch","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAO,kBAAP;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,OAAO,EAAE;AALH,K;;;;;;wCAQY;AAAA;;AAClB,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAvC;AACAI,MAAAA,KAAK,CAAC,qCAAoCJ,MAArC,CAAL,CACGK,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,gBAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OANH,EAOGJ,IAPH,CAOQ,UAAAK,OAAO,EAAI;AACf,QAAA,MAAI,CAACC,QAAL,CAAc;AACZhB,UAAAA,KAAK,EAAEe,OAAO,CAACE,IAAR,CAAajB,KADR;AAEZC,UAAAA,MAAM,EAAEc,OAAO,CAACE,IAAR,CAAaC,OAAb,CAAqBC,IAFjB;AAGZjB,UAAAA,IAAI,EAAE,IAAIkB,IAAJ,CAASL,OAAO,CAACE,IAAR,CAAaI,SAAtB,EAAiCC,kBAAjC,CAAoD,OAApD,CAHM;AAIZlB,UAAAA,OAAO,EAAEW,OAAO,CAACE,IAAR,CAAab;AAJV,SAAd;AAMD,OAdH,EAeGmB,KAfH,CAeS,UAAAC,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAjBH;AAkBD;;;6BAEQ;AACP,aACE;AAAS,QAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKzB,KAAL,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACc,KAAKD,KAAL,CAAWE,MADzB,UACqC,KAAKF,KAAL,CAAWG,IADhD,CAFF,EAKE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKJ,KAAL,CAAWK,OAAf,CARF,CADF;AAYD;;;;EA5CsBR,S;;AA+CzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    fetch('http://localhost:8081/feed/post/'+ postId)\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch status');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({\n          title: resData.post.title,\n          author: resData.post.creator.name,\n          date: new Date(resData.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.post.content\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}